name: Continuous Integration

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

env:
  HELM_CHART_DIR: helm-chart
  GIT_NAME: NGINX Kubernetes Team
  GIT_MAIL: kubernetes@nginx.com

concurrency:
  group: ${{ github.ref_name }}-ci
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Lint Code
        uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5 # v3.4.0
        with:
          version: v1.50.1
          args: --timeout 10m
      - name: Lint Helm
        run: helm lint ${{ env.HELM_CHART_DIR }} 

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Setup Golang Environment
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Run Tests
        run: make test
      - name: Upload Coverage Report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: coverage-${{ github.run_id }}.html
          path: ${{ github.workspace }}/build/coverage.html

  binary:
    name: Build Binary
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Setup Golang Environment
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Download Syft
        uses: anchore/sbom-action/download-syft@07978da4bdb4faa726e52dfc6b1bed63d4b56479 # v0.13.3
        if: startsWith(github.ref, 'refs/tags/')

      - name: Build binary
        uses: goreleaser/goreleaser-action@9754a253a8673b0ea869c2e863b4e975497efd0c # v4.1.1
        with:
          version: latest
          args: ${{ startsWith(github.ref, 'refs/tags/') && 'release' || 'build --snapshot' }} --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZURE_BUCKET_NAME: ${{ secrets.AZURE_BUCKET_NAME }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5 # 0.8.0
        continue-on-error: true
        with:
          scan-type: 'rootfs'
          scan-ref: '.'
          ignore-unfixed: 'true'
          format: 'sarif'
          output: 'trivy-results-nginx-service-mesh.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@3ebbd71c74ef574dbc558c82f70e52732c8b44fe # v2.2.1
        continue-on-error: true
        with:
          sarif_file: 'trivy-results-nginx-service-mesh.sarif'
      - name: Upload Scan Results
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        continue-on-error: true
        with:
          name: 'trivy-results-nginx-service-mesh.sarif'
          path: 'trivy-results-nginx-service-mesh.sarif'

  package-helm:
    name: Package Helm Chart
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.var.outputs.product_version }}
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Output Variables
        id: var
        run: |
          helm_version="$(helm show chart ${{ env.HELM_CHART_DIR }} | grep 'version:' | cut -d ' ' -f 2)"
          product_version="$(helm show chart ${{ env.HELM_CHART_DIR }} | grep 'appVersion:' | cut -d ' ' -f 2)"
          echo "helm_version=$helm_version" >> $GITHUB_OUTPUT
          echo "product_version=$product_version" >> $GITHUB_OUTPUT
      - name: Package
        run: helm package --version ${{ steps.var.outputs.helm_version }} ${{ env.HELM_CHART_DIR }}
      - name: Upload Chart
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: helm-chart
          path: ${{ github.workspace }}/nginx-service-mesh-${{ steps.var.outputs.helm_version }}.tgz

  release-helm:
    name: Release Helm Chart
    runs-on: ubuntu-22.04
    needs: package-helm
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          repository: nginxinc/helm-charts
          token: ${{ secrets.NGINX_PAT }}
      - name: Retrieve latest Helm Chart
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: helm-chart
          path: ${{ github.workspace }}/stable
      - name: Push Helm Chart
        run: |
          helm repo index stable --url https://helm.nginx.com/stable
          git add -A
          git -c user.name='${{ env.GIT_NAME }}' -c user.email='${{ env.GIT_MAIL }}' \
          commit -m "NGINX Service Mesh - Release ${{ needs.package-helm.outputs.version }}"
          git push -u origin master
