{
  "accessControlMode": {{ quote .Values.accessControlMode }},
  "clientMaxBodySize": {{ quote .Values.clientMaxBodySize }},
  "enableUDP": {{ .Values.enableUDP }},
  "environment": {{ quote .Values.environment }},
  "mtls": {
    "caKeyType": {{ quote .Values.mtls.caKeyType }},
    "caTTL": {{ quote .Values.mtls.caTTL }},
    "mode": {{ quote .Values.mtls.mode }},
    "svidTTL": {{ quote .Values.mtls.svidTTL }},
    "trustDomain": {{ quote .Values.mtls.trustDomain }}
  },
  "namespace": {{ quote .Release.Namespace }},
  "nginxErrorLogLevel": {{ quote .Values.nginxErrorLogLevel }},
  "nginxLBMethod": {{ quote .Values.nginxLBMethod }},
  "nginxLogFormat": {{ quote .Values.nginxLogFormat }},
  "prometheusAddress": {{ quote .Values.prometheusAddress }},
  "registry": {
    "disablePublicImages": {{ .Values.registry.disablePublicImages }},
    "imageTag": {{ quote .Values.registry.imageTag }},
    "imagePullPolicy": {{ quote .Values.registry.imagePullPolicy }},
    "registryKeyName": {{ if (include "docker-config-json" .) }}{{ include "registry-key-name" . | quote }}{{ else }}""{{ end }},
    "server": {{ quote .Values.registry.server }},
    "sidecarImage": {{ printf "%s/nginx-mesh-sidecar:%s" .Values.registry.server .Values.registry.imageTag | quote }},
    "sidecarInitImage": {{ printf "%s/nginx-mesh-init:%s" .Values.registry.server .Values.registry.imageTag | quote }}
  },
  "telemetry": {{ if .Values.telemetry }}{
    "exporters": {
      "otlp": {
        "host": {{ quote .Values.telemetry.exporters.otlp.host }},
        "port": {{ .Values.telemetry.exporters.otlp.port }}
      }
    },
    "samplerRatio": {{ .Values.telemetry.samplerRatio }}
  }{{else}}{}{{ end }}
}
