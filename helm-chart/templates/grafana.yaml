{{- if .Values.deployGrafana }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
imagePullSecrets:
- name: {{ include "registry-key-name" . }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana.metrics.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
rules:
- apiGroups:
  - ''
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana.metrics.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana.metrics.builtin.nsm.nginx
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
data:
  dashboards.yaml: {{ .Files.Get "configs/grafana-dashboard-conf.yaml" | quote }}
  datasources.yaml: {{ tpl (.Files.Get "configs/grafana-datasources-conf.yaml") . | quote }}
  grafana.ini: {{ .Files.Get "configs/grafana.ini" | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
data:
  top.json: {{ .Files.Get "configs/grafana-top-dashboard.json" | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: nginx-service-mesh
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: nginx-service-mesh
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/part-of: nginx-service-mesh
    spec:
      serviceAccountName: grafana
      containers:
      - name: grafana
        image: {{ include "grafana.image-server" . }}/grafana:8.3.4
        imagePullPolicy: {{ .Values.registry.imagePullPolicy }}
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-config-volume
          mountPath: "/etc/grafana"
        - name: grafana-dashboard-volume
          mountPath: "/var/lib/grafana/dashboards"
        - name: grafana-dashboard-home
          mountPath: "/usr/share/grafana/public/dashboards"
      volumes:
      - name: grafana-config-volume
        configMap:
          name: grafana-config
          items:
          - key: dashboards.yaml
            path: provisioning/dashboards/dashboards.yaml
          - key: datasources.yaml
            path: provisioning/datasources/datasources.yaml
          - key: grafana.ini
            path: grafana.ini
      - name: grafana-dashboard-volume
        configMap:
          name: grafana-dashboards
          items:
          - key: top.json
            path: top.json
      - name: grafana-dashboard-home
        configMap:
          name: grafana-dashboards
          items:
          - key: top.json
            path: home.json
{{- end }}
